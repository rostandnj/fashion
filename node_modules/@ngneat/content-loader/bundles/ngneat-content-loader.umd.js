(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@ngneat/content-loader', ['exports', '@angular/common', '@angular/core'], factory) :
    (factory((global.ngneat = global.ngneat || {}, global.ngneat['content-loader'] = {}),global.ng.common,global.ng.core));
}(this, (function (exports,common,core) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @return {?}
     */
    function uid() {
        return Math.random()
            .toString(36)
            .substring(2);
    }
    var ContentLoaderComponent = /** @class */ (function () {
        function ContentLoaderComponent(platformId) {
            this.platformId = platformId;
            this.animate = true;
            this.baseUrl = '';
            this.width = 400;
            this.height = 130;
            this.speed = 2;
            this.preserveAspectRatio = 'xMidYMid meet';
            this.primaryColor = '#f9f9f9';
            this.secondaryColor = '#ecebeb';
            this.primaryOpacity = 1;
            this.secondaryOpacity = 1;
            this.ignoreBaseUrl = false;
            this.idClip = uid();
            this.idGradient = uid();
            this.defautlAnimation = ['-3; 1', '-2; 2', '-1; 3'];
            this.rtlAnimation = ['1; -3', '2; -2', '3; -1'];
        }
        /**
         * @return {?}
         */
        ContentLoaderComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                this.animationValues = this.rtl ? this.rtlAnimation : this.defautlAnimation;
                if (this.baseUrl === '' && !this.ignoreBaseUrl && common.isPlatformBrowser(this.platformId)) {
                    this.baseUrl = window.location.pathname;
                }
                this.setFillStyle();
                this.setClipStyle();
            };
        /**
         * @param {?} changes
         * @return {?}
         */
        ContentLoaderComponent.prototype.ngOnChanges = /**
         * @param {?} changes
         * @return {?}
         */
            function (changes) {
                if (changes['baseUrl']) {
                    if (changes['baseUrl'].previousValue !== changes['baseUrl'].currentValue) {
                        this.setFillStyle();
                        this.setClipStyle();
                    }
                }
            };
        /**
         * @return {?}
         */
        ContentLoaderComponent.prototype.setFillStyle = /**
         * @return {?}
         */
            function () {
                this.fillStyle = {
                    fill: "url(" + this.baseUrl + "#" + this.idGradient + ")"
                };
            };
        /**
         * @return {?}
         */
        ContentLoaderComponent.prototype.setClipStyle = /**
         * @return {?}
         */
            function () {
                this.clipStyle = "url(" + this.baseUrl + "#" + this.idClip + ")";
            };
        ContentLoaderComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'content-loader',
                        template: "<svg attr.viewBox=\"0 0 {{width}} {{height}}\" [attr.preserveAspectRatio]=\"preserveAspectRatio\" [ngStyle]=\"style\">\n\n  <rect [attr.clip-path]=\"clipStyle\" [ngStyle]=\"fillStyle\" x=\"0\" y=\"0\" [attr.width]=\"width\" [attr.height]=\"height\" />\n\n  <defs>\n\n    <clipPath [attr.id]=\"idClip\">\n      <ng-content></ng-content>\n    </clipPath>\n\n    <linearGradient [attr.id]=\"idGradient\">\n\n      <stop offset=\"0%\" [attr.stop-color]=\"primaryColor\" [attr.stop-opacity]=\"primaryOpacity\">\n        <ng-container *ngIf=\"animate\">\n          <animate attributeName=\"offset\" [attr.values]=\"animationValues[0]\" attr.dur={{speed}} s repeatCount=\"indefinite\" />\n        </ng-container>\n      </stop>\n\n      <stop offset=\"50%\" [attr.stop-color]=\"secondaryColor\" [attr.stop-opacity]=\"secondaryOpacity\">\n        <ng-container *ngIf=\"animate\">\n          <animate attributeName=\"offset\" [attr.values]=\"animationValues[1]\" attr.dur={{speed}} s repeatCount=\"indefinite\" />\n        </ng-container>\n      </stop>\n\n      <stop offset=\"100%\" [attr.stop-color]=\"primaryColor\" [attr.stop-opacity]=\"primaryOpacity\">\n        <ng-container *ngIf=\"animate\">\n          <animate attributeName=\"offset\" [attr.values]=\"animationValues[2]\" attr.dur={{speed}} s repeatCount=\"indefinite\" />\n        </ng-container>\n      </stop>\n\n    </linearGradient>\n\n  </defs>\n\n</svg>\n"
                    }] }
        ];
        /** @nocollapse */
        ContentLoaderComponent.ctorParameters = function () {
            return [
                { type: String, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] }] }
            ];
        };
        ContentLoaderComponent.propDecorators = {
            animate: [{ type: core.Input }],
            baseUrl: [{ type: core.Input }],
            width: [{ type: core.Input }],
            height: [{ type: core.Input }],
            speed: [{ type: core.Input }],
            preserveAspectRatio: [{ type: core.Input }],
            primaryColor: [{ type: core.Input }],
            secondaryColor: [{ type: core.Input }],
            primaryOpacity: [{ type: core.Input }],
            secondaryOpacity: [{ type: core.Input }],
            uniqueKey: [{ type: core.Input }],
            rtl: [{ type: core.Input }],
            style: [{ type: core.Input }],
            ignoreBaseUrl: [{ type: core.Input }]
        };
        return ContentLoaderComponent;
    }());

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var BulletListContentLoaderComponent = /** @class */ (function (_super) {
        __extends(BulletListContentLoaderComponent, _super);
        function BulletListContentLoaderComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        BulletListContentLoaderComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'bullet-list-content-loader',
                        template: "\n  <content-loader [animate]=\"animate\" [width]=\"width\" [height]=\"height\" [speed]=\"speed\" [preserveAspectRatio]=\"preserveAspectRatio\"\n  [primaryColor]=\"primaryColor\" [secondaryColor]=\"secondaryColor\" [primaryOpacity]=\"primaryOpacity\" [secondaryColor]=\"secondaryColor\"\n  [uniqueKey]=\"uniqueKey\">\n    <svg:circle cx=\"10\" cy=\"20\" r=\"8\" />\n    <svg:rect x=\"25\" y=\"15\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n    <svg:circle cx=\"10\" cy=\"50\" r=\"8\" />\n    <svg:rect x=\"25\" y=\"45\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n    <svg:circle cx=\"10\" cy=\"80\" r=\"8\" />\n    <svg:rect x=\"25\" y=\"75\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n    <svg:circle cx=\"10\" cy=\"110\" r=\"8\" />\n    <svg:rect x=\"25\" y=\"105\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n   </content-loader>\n  "
                    }] }
        ];
        return BulletListContentLoaderComponent;
    }(ContentLoaderComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FacebookContentLoaderComponent = /** @class */ (function (_super) {
        __extends(FacebookContentLoaderComponent, _super);
        function FacebookContentLoaderComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FacebookContentLoaderComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'facebook-content-loader',
                        template: "\n  <content-loader [animate]=\"animate\" [width]=\"width\" [height]=\"height\" [speed]=\"speed\" [preserveAspectRatio]=\"preserveAspectRatio\"\n  [primaryColor]=\"primaryColor\" [secondaryColor]=\"secondaryColor\" [primaryOpacity]=\"primaryOpacity\" [secondaryColor]=\"secondaryColor\"\n  [uniqueKey]=\"uniqueKey\">\n  \t<svg:rect x=\"70\" y=\"15\" rx=\"4\" ry=\"4\" width=\"117\" height=\"6.4\" />\n  \t<svg:rect x=\"70\" y=\"35\" rx=\"3\" ry=\"3\" width=\"85\" height=\"6.4\" />\n  \t<svg:rect x=\"0\" y=\"80\" rx=\"3\" ry=\"3\" width=\"350\" height=\"6.4\" />\n  \t<svg:rect x=\"0\" y=\"100\" rx=\"3\" ry=\"3\" width=\"380\" height=\"6.4\" />\n  \t<svg:rect x=\"0\" y=\"120\" rx=\"3\" ry=\"3\" width=\"201\" height=\"6.4\" />\n  \t<svg:circle cx=\"30\" cy=\"30\" r=\"30\" />\n   </content-loader>\n  "
                    }] }
        ];
        return FacebookContentLoaderComponent;
    }(ContentLoaderComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ListContentLoaderComponent = /** @class */ (function (_super) {
        __extends(ListContentLoaderComponent, _super);
        function ListContentLoaderComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ListContentLoaderComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'list-content-loader',
                        template: "\n  <content-loader [animate]=\"animate\" [width]=\"width\" [height]=\"height\" [speed]=\"speed\" [preserveAspectRatio]=\"preserveAspectRatio\"\n  [primaryColor]=\"primaryColor\" [secondaryColor]=\"secondaryColor\" [primaryOpacity]=\"primaryOpacity\" [secondaryColor]=\"secondaryColor\"\n  [uniqueKey]=\"uniqueKey\">\n  \t<svg:rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n  \t<svg:rect x=\"20\" y=\"20\" rx=\"3\" ry=\"3\" width=\"220\" height=\"10\" />\n  \t<svg:rect x=\"20\" y=\"40\" rx=\"3\" ry=\"3\" width=\"170\" height=\"10\" />\n  \t<svg:rect x=\"0\" y=\"60\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n  \t<svg:rect x=\"20\" y=\"80\" rx=\"3\" ry=\"3\" width=\"200\" height=\"10\" />\n  \t<svg:rect x=\"20\" y=\"100\" rx=\"3\" ry=\"3\" width=\"80\" height=\"10\" />\n   </content-loader>\n  "
                    }] }
        ];
        return ListContentLoaderComponent;
    }(ContentLoaderComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ContentLoaderModule = /** @class */ (function () {
        function ContentLoaderModule() {
        }
        /**
         * @return {?}
         */
        ContentLoaderModule.forRoot = /**
         * @return {?}
         */
            function () {
                return {
                    ngModule: ContentLoaderModule
                };
            };
        ContentLoaderModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [common.CommonModule],
                        declarations: [
                            ContentLoaderComponent,
                            FacebookContentLoaderComponent,
                            BulletListContentLoaderComponent,
                            ListContentLoaderComponent
                        ],
                        exports: [
                            ContentLoaderComponent,
                            FacebookContentLoaderComponent,
                            BulletListContentLoaderComponent,
                            ListContentLoaderComponent
                        ]
                    },] }
        ];
        return ContentLoaderModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.ContentLoaderComponent = ContentLoaderComponent;
    exports.ContentLoaderModule = ContentLoaderModule;
    exports.FacebookContentLoaderComponent = FacebookContentLoaderComponent;
    exports.ListContentLoaderComponent = ListContentLoaderComponent;
    exports.BulletListContentLoaderComponent = BulletListContentLoaderComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngneat-content-loader.umd.js.map