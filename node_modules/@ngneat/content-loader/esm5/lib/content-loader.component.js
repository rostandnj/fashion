/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Inject, Input, PLATFORM_ID } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
/**
 * @return {?}
 */
function uid() {
    return Math.random()
        .toString(36)
        .substring(2);
}
var ContentLoaderComponent = /** @class */ (function () {
    function ContentLoaderComponent(platformId) {
        this.platformId = platformId;
        this.animate = true;
        this.baseUrl = '';
        this.width = 400;
        this.height = 130;
        this.speed = 2;
        this.preserveAspectRatio = 'xMidYMid meet';
        this.primaryColor = '#f9f9f9';
        this.secondaryColor = '#ecebeb';
        this.primaryOpacity = 1;
        this.secondaryOpacity = 1;
        this.ignoreBaseUrl = false;
        this.idClip = uid();
        this.idGradient = uid();
        this.defautlAnimation = ['-3; 1', '-2; 2', '-1; 3'];
        this.rtlAnimation = ['1; -3', '2; -2', '3; -1'];
    }
    /**
     * @return {?}
     */
    ContentLoaderComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.animationValues = this.rtl ? this.rtlAnimation : this.defautlAnimation;
        if (this.baseUrl === '' && !this.ignoreBaseUrl && isPlatformBrowser(this.platformId)) {
            this.baseUrl = window.location.pathname;
        }
        this.setFillStyle();
        this.setClipStyle();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    ContentLoaderComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes['baseUrl']) {
            if (changes['baseUrl'].previousValue !== changes['baseUrl'].currentValue) {
                this.setFillStyle();
                this.setClipStyle();
            }
        }
    };
    /**
     * @return {?}
     */
    ContentLoaderComponent.prototype.setFillStyle = /**
     * @return {?}
     */
    function () {
        this.fillStyle = {
            fill: "url(" + this.baseUrl + "#" + this.idGradient + ")"
        };
    };
    /**
     * @return {?}
     */
    ContentLoaderComponent.prototype.setClipStyle = /**
     * @return {?}
     */
    function () {
        this.clipStyle = "url(" + this.baseUrl + "#" + this.idClip + ")";
    };
    ContentLoaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'content-loader',
                    template: "<svg attr.viewBox=\"0 0 {{width}} {{height}}\" [attr.preserveAspectRatio]=\"preserveAspectRatio\" [ngStyle]=\"style\">\n\n  <rect [attr.clip-path]=\"clipStyle\" [ngStyle]=\"fillStyle\" x=\"0\" y=\"0\" [attr.width]=\"width\" [attr.height]=\"height\" />\n\n  <defs>\n\n    <clipPath [attr.id]=\"idClip\">\n      <ng-content></ng-content>\n    </clipPath>\n\n    <linearGradient [attr.id]=\"idGradient\">\n\n      <stop offset=\"0%\" [attr.stop-color]=\"primaryColor\" [attr.stop-opacity]=\"primaryOpacity\">\n        <ng-container *ngIf=\"animate\">\n          <animate attributeName=\"offset\" [attr.values]=\"animationValues[0]\" attr.dur={{speed}} s repeatCount=\"indefinite\" />\n        </ng-container>\n      </stop>\n\n      <stop offset=\"50%\" [attr.stop-color]=\"secondaryColor\" [attr.stop-opacity]=\"secondaryOpacity\">\n        <ng-container *ngIf=\"animate\">\n          <animate attributeName=\"offset\" [attr.values]=\"animationValues[1]\" attr.dur={{speed}} s repeatCount=\"indefinite\" />\n        </ng-container>\n      </stop>\n\n      <stop offset=\"100%\" [attr.stop-color]=\"primaryColor\" [attr.stop-opacity]=\"primaryOpacity\">\n        <ng-container *ngIf=\"animate\">\n          <animate attributeName=\"offset\" [attr.values]=\"animationValues[2]\" attr.dur={{speed}} s repeatCount=\"indefinite\" />\n        </ng-container>\n      </stop>\n\n    </linearGradient>\n\n  </defs>\n\n</svg>\n"
                }] }
    ];
    /** @nocollapse */
    ContentLoaderComponent.ctorParameters = function () { return [
        { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    ContentLoaderComponent.propDecorators = {
        animate: [{ type: Input }],
        baseUrl: [{ type: Input }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        speed: [{ type: Input }],
        preserveAspectRatio: [{ type: Input }],
        primaryColor: [{ type: Input }],
        secondaryColor: [{ type: Input }],
        primaryOpacity: [{ type: Input }],
        secondaryOpacity: [{ type: Input }],
        uniqueKey: [{ type: Input }],
        rtl: [{ type: Input }],
        style: [{ type: Input }],
        ignoreBaseUrl: [{ type: Input }]
    };
    return ContentLoaderComponent;
}());
export { ContentLoaderComponent };
if (false) {
    /** @type {?} */
    ContentLoaderComponent.prototype.animate;
    /** @type {?} */
    ContentLoaderComponent.prototype.baseUrl;
    /** @type {?} */
    ContentLoaderComponent.prototype.width;
    /** @type {?} */
    ContentLoaderComponent.prototype.height;
    /** @type {?} */
    ContentLoaderComponent.prototype.speed;
    /** @type {?} */
    ContentLoaderComponent.prototype.preserveAspectRatio;
    /** @type {?} */
    ContentLoaderComponent.prototype.primaryColor;
    /** @type {?} */
    ContentLoaderComponent.prototype.secondaryColor;
    /** @type {?} */
    ContentLoaderComponent.prototype.primaryOpacity;
    /** @type {?} */
    ContentLoaderComponent.prototype.secondaryOpacity;
    /** @type {?} */
    ContentLoaderComponent.prototype.uniqueKey;
    /** @type {?} */
    ContentLoaderComponent.prototype.rtl;
    /** @type {?} */
    ContentLoaderComponent.prototype.style;
    /** @type {?} */
    ContentLoaderComponent.prototype.ignoreBaseUrl;
    /** @type {?} */
    ContentLoaderComponent.prototype.idClip;
    /** @type {?} */
    ContentLoaderComponent.prototype.idGradient;
    /** @type {?} */
    ContentLoaderComponent.prototype.defautlAnimation;
    /** @type {?} */
    ContentLoaderComponent.prototype.rtlAnimation;
    /** @type {?} */
    ContentLoaderComponent.prototype.animationValues;
    /** @type {?} */
    ContentLoaderComponent.prototype.fillStyle;
    /** @type {?} */
    ContentLoaderComponent.prototype.clipStyle;
    /**
     * @type {?}
     * @private
     */
    ContentLoaderComponent.prototype.platformId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1sb2FkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5nbmVhdC9jb250ZW50LWxvYWRlci8iLCJzb3VyY2VzIjpbImxpYi9jb250ZW50LWxvYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBcUIsV0FBVyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUN4RyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7OztBQUVwRCxTQUFTLEdBQUc7SUFDVixPQUFPLElBQUksQ0FBQyxNQUFNLEVBQUU7U0FDakIsUUFBUSxDQUFDLEVBQUUsQ0FBQztTQUNaLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsQixDQUFDO0FBRUQ7SUEyQ0UsZ0NBQXlDLFVBQWtCO1FBQWxCLGVBQVUsR0FBVixVQUFVLENBQVE7UUF0Q2xELFlBQU8sR0FBRyxJQUFJLENBQUM7UUFFZixZQUFPLEdBQUcsRUFBRSxDQUFDO1FBRWIsVUFBSyxHQUFHLEdBQUcsQ0FBQztRQUVaLFdBQU0sR0FBRyxHQUFHLENBQUM7UUFFYixVQUFLLEdBQUcsQ0FBQyxDQUFDO1FBRVYsd0JBQW1CLEdBQUcsZUFBZSxDQUFDO1FBRXRDLGlCQUFZLEdBQUcsU0FBUyxDQUFDO1FBRXpCLG1CQUFjLEdBQUcsU0FBUyxDQUFDO1FBRTNCLG1CQUFjLEdBQUcsQ0FBQyxDQUFDO1FBRW5CLHFCQUFnQixHQUFHLENBQUMsQ0FBQztRQVFyQixrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUUvQixXQUFNLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFDZixlQUFVLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFFbkIscUJBQWdCLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQy9DLGlCQUFZLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBTW1CLENBQUM7Ozs7SUFFL0QseUNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7UUFFNUUsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLElBQUksaUJBQWlCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQ3BGLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUM7U0FDekM7UUFFRCxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRUQsNENBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUFFO1lBQ3RCLElBQUksT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLGFBQWEsS0FBSyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsWUFBWSxFQUFFO2dCQUN4RSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7Z0JBQ3BCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQzthQUNyQjtTQUNGO0lBQ0gsQ0FBQzs7OztJQUVELDZDQUFZOzs7SUFBWjtRQUNFLElBQUksQ0FBQyxTQUFTLEdBQUc7WUFDZixJQUFJLEVBQUUsU0FBTyxJQUFJLENBQUMsT0FBTyxTQUFJLElBQUksQ0FBQyxVQUFVLE1BQUc7U0FDaEQsQ0FBQztJQUNKLENBQUM7Ozs7SUFFRCw2Q0FBWTs7O0lBQVo7UUFDRSxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQU8sSUFBSSxDQUFDLE9BQU8sU0FBSSxJQUFJLENBQUMsTUFBTSxNQUFHLENBQUM7SUFDekQsQ0FBQzs7Z0JBekVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixtNUNBQThDO2lCQUMvQzs7Ozs2Q0F3Q2MsTUFBTSxTQUFDLFdBQVc7OzswQkF0QzlCLEtBQUs7MEJBRUwsS0FBSzt3QkFFTCxLQUFLO3lCQUVMLEtBQUs7d0JBRUwsS0FBSztzQ0FFTCxLQUFLOytCQUVMLEtBQUs7aUNBRUwsS0FBSztpQ0FFTCxLQUFLO21DQUVMLEtBQUs7NEJBRUwsS0FBSztzQkFFTCxLQUFLO3dCQUVMLEtBQUs7Z0NBRUwsS0FBSzs7SUEyQ1IsNkJBQUM7Q0FBQSxBQTFFRCxJQTBFQztTQXRFWSxzQkFBc0I7OztJQUNqQyx5Q0FBd0I7O0lBRXhCLHlDQUFzQjs7SUFFdEIsdUNBQXFCOztJQUVyQix3Q0FBc0I7O0lBRXRCLHVDQUFtQjs7SUFFbkIscURBQStDOztJQUUvQyw4Q0FBa0M7O0lBRWxDLGdEQUFvQzs7SUFFcEMsZ0RBQTRCOztJQUU1QixrREFBOEI7O0lBRTlCLDJDQUFtQjs7SUFFbkIscUNBQWE7O0lBRWIsdUNBQWU7O0lBRWYsK0NBQStCOztJQUUvQix3Q0FBZTs7SUFDZiw0Q0FBbUI7O0lBRW5CLGtEQUErQzs7SUFDL0MsOENBQTJDOztJQUMzQyxpREFBZ0I7O0lBRWhCLDJDQUE0Qjs7SUFDNUIsMkNBQWtCOzs7OztJQUVOLDRDQUErQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIFBMQVRGT1JNX0lELCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpc1BsYXRmb3JtQnJvd3NlciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmZ1bmN0aW9uIHVpZCgpIHtcbiAgcmV0dXJuIE1hdGgucmFuZG9tKClcbiAgICAudG9TdHJpbmcoMzYpXG4gICAgLnN1YnN0cmluZygyKTtcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29udGVudC1sb2FkZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vY29udGVudC1sb2FkZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvbnRlbnRMb2FkZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIGFuaW1hdGUgPSB0cnVlO1xuXG4gIEBJbnB1dCgpIGJhc2VVcmwgPSAnJztcblxuICBASW5wdXQoKSB3aWR0aCA9IDQwMDtcblxuICBASW5wdXQoKSBoZWlnaHQgPSAxMzA7XG5cbiAgQElucHV0KCkgc3BlZWQgPSAyO1xuXG4gIEBJbnB1dCgpIHByZXNlcnZlQXNwZWN0UmF0aW8gPSAneE1pZFlNaWQgbWVldCc7XG5cbiAgQElucHV0KCkgcHJpbWFyeUNvbG9yID0gJyNmOWY5ZjknO1xuXG4gIEBJbnB1dCgpIHNlY29uZGFyeUNvbG9yID0gJyNlY2ViZWInO1xuXG4gIEBJbnB1dCgpIHByaW1hcnlPcGFjaXR5ID0gMTtcblxuICBASW5wdXQoKSBzZWNvbmRhcnlPcGFjaXR5ID0gMTtcblxuICBASW5wdXQoKSB1bmlxdWVLZXk7XG5cbiAgQElucHV0KCkgcnRsO1xuXG4gIEBJbnB1dCgpIHN0eWxlO1xuXG4gIEBJbnB1dCgpIGlnbm9yZUJhc2VVcmwgPSBmYWxzZTtcblxuICBpZENsaXAgPSB1aWQoKTtcbiAgaWRHcmFkaWVudCA9IHVpZCgpO1xuXG4gIGRlZmF1dGxBbmltYXRpb24gPSBbJy0zOyAxJywgJy0yOyAyJywgJy0xOyAzJ107XG4gIHJ0bEFuaW1hdGlvbiA9IFsnMTsgLTMnLCAnMjsgLTInLCAnMzsgLTEnXTtcbiAgYW5pbWF0aW9uVmFsdWVzO1xuXG4gIGZpbGxTdHlsZTogeyBmaWxsOiBzdHJpbmcgfTtcbiAgY2xpcFN0eWxlOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoQEluamVjdChQTEFURk9STV9JRCkgcHJpdmF0ZSBwbGF0Zm9ybUlkOiBzdHJpbmcpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5hbmltYXRpb25WYWx1ZXMgPSB0aGlzLnJ0bCA/IHRoaXMucnRsQW5pbWF0aW9uIDogdGhpcy5kZWZhdXRsQW5pbWF0aW9uO1xuXG4gICAgaWYgKHRoaXMuYmFzZVVybCA9PT0gJycgJiYgIXRoaXMuaWdub3JlQmFzZVVybCAmJiBpc1BsYXRmb3JtQnJvd3Nlcih0aGlzLnBsYXRmb3JtSWQpKSB7XG4gICAgICB0aGlzLmJhc2VVcmwgPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfVxuXG4gICAgdGhpcy5zZXRGaWxsU3R5bGUoKTtcbiAgICB0aGlzLnNldENsaXBTdHlsZSgpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzWydiYXNlVXJsJ10pIHtcbiAgICAgIGlmIChjaGFuZ2VzWydiYXNlVXJsJ10ucHJldmlvdXNWYWx1ZSAhPT0gY2hhbmdlc1snYmFzZVVybCddLmN1cnJlbnRWYWx1ZSkge1xuICAgICAgICB0aGlzLnNldEZpbGxTdHlsZSgpO1xuICAgICAgICB0aGlzLnNldENsaXBTdHlsZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHNldEZpbGxTdHlsZSgpIHtcbiAgICB0aGlzLmZpbGxTdHlsZSA9IHtcbiAgICAgIGZpbGw6IGB1cmwoJHt0aGlzLmJhc2VVcmx9IyR7dGhpcy5pZEdyYWRpZW50fSlgXG4gICAgfTtcbiAgfVxuXG4gIHNldENsaXBTdHlsZSgpIHtcbiAgICB0aGlzLmNsaXBTdHlsZSA9IGB1cmwoJHt0aGlzLmJhc2VVcmx9IyR7dGhpcy5pZENsaXB9KWA7XG4gIH1cbn1cbiJdfQ==