import { OnChanges, OnInit, SimpleChanges } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class ContentLoaderComponent implements OnInit, OnChanges {
    private platformId;
    animate: boolean;
    baseUrl: string;
    width: number;
    height: number;
    speed: number;
    preserveAspectRatio: string;
    primaryColor: string;
    secondaryColor: string;
    primaryOpacity: number;
    secondaryOpacity: number;
    uniqueKey: any;
    rtl: any;
    style: any;
    ignoreBaseUrl: boolean;
    idClip: string;
    idGradient: string;
    defautlAnimation: string[];
    rtlAnimation: string[];
    animationValues: any;
    fillStyle: {
        fill: string;
    };
    clipStyle: string;
    constructor(platformId: string);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    setFillStyle(): void;
    setClipStyle(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ContentLoaderComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ContentLoaderComponent, "content-loader", never, { "animate": "animate"; "baseUrl": "baseUrl"; "width": "width"; "height": "height"; "speed": "speed"; "preserveAspectRatio": "preserveAspectRatio"; "primaryColor": "primaryColor"; "secondaryColor": "secondaryColor"; "primaryOpacity": "primaryOpacity"; "secondaryOpacity": "secondaryOpacity"; "ignoreBaseUrl": "ignoreBaseUrl"; "uniqueKey": "uniqueKey"; "rtl": "rtl"; "style": "style"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=content-loader.component.d.ts.map