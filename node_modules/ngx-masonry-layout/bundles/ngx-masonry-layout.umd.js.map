{"version":3,"file":"ngx-masonry-layout.umd.js.map","sources":["ng://ngx-masonry-layout/lib/masonry-layout.component.ts","ng://ngx-masonry-layout/lib/masonry-layout.module.ts"],"sourcesContent":["import { Component, ElementRef, HostListener, Input, Output, OnInit, OnChanges, EventEmitter } from '@angular/core';\n\nexport interface Image {\n    path: string; \n    width: number; \n    height: number;\n    computedHeight?: string;\n    computedWidth?: string;\n    margin?: string;\n};\n\nexport interface Images extends Array<Image>{}\n\n@Component({\n    selector: 'masonry-layout', \n    template: `<div \n\t[ngClass]=\"CLASS_NAME\"\n\t*ngFor=\"let image of images; let i = index;\"\n    [style.width]=\"image.computedWidth\"\n    [style.height]=\"image.computedHeight\"\n    [style.float]=\"'left'\"\n    [style.margin]=\"image.margin\"\n    [style.background]=\"'#eeeeee'\"\n    [style.lineHeight]=\"0\">\n\t<img \n        #imageElem\n        [src]=\"image.path\" \n        [style.width.%]=\"100\" \n        [style.height]=\"'auto'\"\n        [style.opacity]=\"0\"\n        (click)=\"clickOnImage(image, i)\"\n        (load)=\"onImageLoaded(imageElem)\" />\n</div>`,\n})\n\nexport class MasonryLayoutComponent {\n    GUTTER: number = 0;\n    nodes: any;\n    elem: any;\n    savedNodeDimensions: any = [];\n    observer: any;\n    gridState: string = 'not started';\n    resizeTimer: any;\n    changesTimer: any;\n\n    @Input('images') images: Images; \n    @Input('masonry') ENABLE_MASONRY: boolean = true; \n    @Input('max-height') MAX_HEIGHT: number = 400; \n    @Input('class-name') CLASS_NAME: string | { [key: string]: any; };\n\n    @Input('gutter')\n    set gutter(value: number){\n        this.GUTTER = value / 2;\n    }\n\n    @Output() events: EventEmitter<any> = new EventEmitter<any>();\n     \n    get isMobile():boolean {\n        var check = false;\n        (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor);\n        return check;\n    };\n     \n    constructor(private elementRef: ElementRef){\n        this.elem = this.elementRef.nativeElement;\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onWindowResize(event) {\n        clearTimeout(this.resizeTimer);\n\n        this.resizeTimer = setTimeout(() => {\n            this.gridState = 'not started';\n            this.buildGrid(); \n        }, 250);\n    }\n\n    ngOnInit() {\n        this.buildGrid();\n    }\n\n    ngOnChanges(){\n        clearTimeout(this.changesTimer);\n\n        this.changesTimer = setTimeout(() => {\n            this.gridState = 'not started';\n            this.buildGrid(); \n        }, 250);\n    }\n\n    buildGrid(){\n        let parentWidth = Math.floor(this.elem.parentNode.offsetWidth);\n        let totalRowWidth: any = 0; \n        let row: any = {\n            startIndex: 0,\n            endIndex: 0,\n            length: 0,\n            totalWidth: 0\n        };\n\n        if (!this.images || !this.images.length){\n            return;\n        }\n\n        this.elem.style.width = parentWidth +'px';\n        this.elem.style.display = 'table';\n\n        this.images.forEach((node, index) => {\n            if (row.totalWidth === 0){\n                row.startIndex = index;\n                row.length = 0;\n            }\n\n            row.length++;\n            row.totalWidth += this.getComputedWidth(index);\n            \n            if (row.totalWidth >= parentWidth || this.isLastChild(index)){\n                row.endIndex = index;\n                let scaling = row.totalWidth/parentWidth;\n\n                this.setColDimensions(scaling, row);\n                row.totalWidth = 0; \n            }\n        });\n    }\n\n    setColDimensions(scaling: number, row: any){\n        let totalRowWidth: any = 0;\n        let parentWidth = this.elem.parentNode.offsetWidth;\n        scaling = (scaling < 1) ? 1 : scaling;\n\n        this.images.forEach((node, index) => {\n            if (!this.ENABLE_MASONRY){\n                node.computedHeight = this.MAX_HEIGHT + 'px';\n                node.computedWidth = this.getComputedWidth(index) + 'px';\n                node.margin = this.getNodeMargin(parentWidth);\n                return;\n            }\n\n            if (index >= row.startIndex && index <= row.endIndex){\n                let nodeWidth;\n\n                // last image\n                if (index === row.endIndex && scaling > 1){ \n                    nodeWidth = (100 - totalRowWidth) - ((this.GUTTER * 2) / parentWidth * 100);\n                    node.computedWidth = 'calc('+nodeWidth+'%)';\n\n                    if (this.gridState === 'not started'){\n                        this.gridState = 'pre-building';\n\n                        setTimeout(() => {\n                            this.buildGrid();\n                        }, 100);\n                    }\n                } \n                else {\n                    nodeWidth = ((this.getComputedWidth(index) / scaling) / parentWidth * 100) - ((row.length * (this.GUTTER * 2)) * (this.getComputedWidth(index) / scaling) / parentWidth) / parentWidth * 100;\n                    node.computedWidth = 'calc('+nodeWidth+'%)';\n                    \n                    totalRowWidth += nodeWidth;\n                    totalRowWidth += (this.GUTTER / parentWidth * 100) * 2;  \n                }\n\n                // last row and last image\n                if (index === row.endIndex && row.length === 1 && this.isMobile){\n                \tnodeWidth = 100 - ((this.GUTTER * 2) / parentWidth * 100);\n                    let height = node.height * ( parentWidth * (nodeWidth / 100) / node.width);\n\n                    if (height/2 < this.MAX_HEIGHT){\n                        node.computedWidth = 'calc('+nodeWidth+'%)';\n                    }\n                }\n\n                node.margin = this.getNodeMargin(parentWidth);\n                node.computedHeight = node.height * ( parentWidth * (nodeWidth / 100) / node.width) + 'px';\n            }\n        });\n    }\n\n    getComputedWidth(index: number){\n        return this.images[index].width / (this.images[index].height / this.MAX_HEIGHT);\n    }\n\n    isLastChild(index: number){\n        return index + 1 === this.images.length;\n    }\n\n    getNodeMargin(parentWidth: number){\n        return 'calc('+this.GUTTER / parentWidth * 100+'%)';\n    }\n\n    clickOnImage(image: any, i: number){\n        this.events.emit({\n            type: 'click-on-image',\n            image: image,\n            index: i\n        });\n    }\n\n    onImageLoaded(elem){\n        elem.style.opacity = 1;\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MasonryLayoutComponent } from './masonry-layout.component'; \n\n@NgModule({\n    declarations: [\n        MasonryLayoutComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        MasonryLayoutComponent\n    ],\n    entryComponents: [\n        MasonryLayoutComponent\n    ]\n})\nexport class MasonryLayoutModule { }\n"],"names":["EventEmitter","Component","ElementRef","Input","Output","HostListener","NgModule","CommonModule"],"mappings":"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"}
