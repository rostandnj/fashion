import { ElementRef, EventEmitter } from '@angular/core';
export interface Image {
    path: string;
    width: number;
    height: number;
    computedHeight?: string;
    computedWidth?: string;
    margin?: string;
}
export interface Images extends Array<Image> {
}
export declare class MasonryLayoutComponent {
    private elementRef;
    GUTTER: number;
    nodes: any;
    elem: any;
    savedNodeDimensions: any;
    observer: any;
    gridState: string;
    resizeTimer: any;
    changesTimer: any;
    images: Images;
    ENABLE_MASONRY: boolean;
    MAX_HEIGHT: number;
    CLASS_NAME: string | {
        [key: string]: any;
    };
    gutter: number;
    events: EventEmitter<any>;
    readonly isMobile: boolean;
    constructor(elementRef: ElementRef);
    onWindowResize(event: any): void;
    ngOnInit(): void;
    ngOnChanges(): void;
    buildGrid(): void;
    setColDimensions(scaling: number, row: any): void;
    getComputedWidth(index: number): number;
    isLastChild(index: number): boolean;
    getNodeMargin(parentWidth: number): string;
    clickOnImage(image: any, i: number): void;
    onImageLoaded(elem: any): void;
}
